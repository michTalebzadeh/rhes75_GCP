pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                // Checkout your Git repository with the 'main' branch
                checkout([$class: 'GitSCM', branches: [[name: 'main']], userRemoteConfigs: [[url: 'https://github.com/michTalebzadeh/rhes75_GCP.git']]])
            }
        }

        stage('Terraform Init') {
            steps {
                // Navigate to the vm-instance directory and then initialize Terraform
                dir('vm-instance') {
                    sh 'terraform init'
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                // Navigate to the vm-instance directory and then create a Terraform plan
                dir('vm-instance') {
                    sh 'terraform plan -out=tfplan'
                }
            }
        }

        // Add other stages for apply and destroy as needed, with the 'dir' step.

        stage('Terraform Apply') {
            steps {
                dir('vm-instance') {
                    sh 'terraform apply -auto-approve tfplan'
                }
            }
        }

        stage('Terraform Destroy') {
            steps {
                dir('vm-instance') {
                    sh 'terraform destroy -auto-approve'
                }
            }
        }
    }

    post {
        success {
            // Notify or perform additional actions upon successful provisioning
            echo 'Provisioning succeeded!'
        }

        failure {
            // Notify or perform actions if the provisioning fails
            echo 'Provisioning failed!'
        }
    }
}
